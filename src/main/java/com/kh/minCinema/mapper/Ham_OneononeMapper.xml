<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.minCinema.mapper.Ham_OneononeMapper">
	<!-- 고객센터 -->
	<sql id="search">
		<where>
			<foreach item="type" collection="typeArr">
				<choose>
					<when test="type == 'S'.toString()"> sender LIKE '%' || #{keyword} || '%' </when>
					<when test="type == 'M'.toString()"> mtitle LIKE '%' || #{keyword} || '%' </when>
					<when test="type == 'D'.toString()"> send_date LIKE '%' || #{keyword} || '%' </when>
					<when test="type == 'O'.toString()"> open_date LIKE '%' || #{keyword} || '%' </when>
				</choose>
			</foreach>
		</where>
	</sql>
	<!-- 운영자측 전체를 조회 -->
	<select id="listOneonone" resultType="com.kh.minCinema.domain.Ham_OneononeVO">
		select rn,msg_id,sender,mtitle,message,remessage,TO_CHAR(open_date,
		'yyyy-MM-dd HH24:MI') open_date,TO_CHAR(send_date, 'yyyy-MM-dd
		HH24:MI') send_date
		from ( 
			SELECT
				rn,msg_id,sender,mtitle,message,remessage,send_date,open_date
		FROM MC_ONEONONE
		<include refid="search" />
		)
		ORDER BY rn DESC
	</select>
	<update id="replyUpdate">
		update mc_oneonone set
		open_date = #{open_date}
		where rn = #{rn}
	</update>

	<!-- 유저측 문의사항 입력 -->
	<insert id="insertInquiry">
		insert into MC_ONEONONE(rn,msg_id,sender,mtitle,message)
		values(seq_rn.NEXTVAL,#{msg_id},#{sender},#{mtitle},#{message})
	</insert>
	<!-- 유저 문의내용 들고오기 -->
	<select id="selectGetOne" resultType="com.kh.minCinema.domain.Ham_OneononeVO"> 
		select * from MC_ONEONONE 
		where rn = #{rn} and 
		sender = #{sender}
		 </select>
	<!-- 관리자 유저 답장 -->
	<update id="updateInquiry"> 
		update mc_oneonone set 
		remessage = #{remessage},
		open_date = sysdate 
		where msg_id = #{msg_id}
		and rn = #{rn}
		</update>
	<!-- 유저측 답변 읽어 오기 -->
	<select id="selectViewReply" resultType="com.kh.minCinema.domain.Ham_OneononeVO"> 
		select * from MC_ONEONONE 
		where msg_id = #{msg_id}
	</select>
	<!-- 유저 문의내용 들고오기 -->
	<select id="selectGetReply" resultType="com.kh.minCinema.domain.Ham_OneononeVO"> 
		select rn,msg_id,sender,mtitle,message,remessage,TO_CHAR(open_date,
		'yyyy-MM-dd HH24:MI') open_date,TO_CHAR(send_date, 'yyyy-MM-dd
		HH24:MI') send_date 
		from MC_ONEONONE 
		where sender = #{sender}
		ORDER BY send_date DESC
	</select>
	<!-- 차트를 위한 유저문의 카운트 -->
	<select id="inquirySendCount" resultType="com.kh.minCinema.domain.Ham_CountDateVO"> 
	<![CDATA[SELECT TO_CHAR(b.dt, 'MM') AS send_date , 
	NVL(SUM(a.monthCount), 0) monthCount 
	FROM ( SELECT TO_CHAR(send_date, 'YYYY-MM-DD') AS send_date , COUNT(*) monthCount 
	FROM MC_ONEONONE 
	WHERE send_date BETWEEN TO_DATE('2024-01-01', 'YYYY-MM-DD') 
	AND TO_DATE('2024-12-31', 'YYYY-MM-DD') 
	GROUP BY send_date, 
	TO_CHAR(send_date, 'YYYY-MM-DD') ) a , 
	( SELECT TO_DATE('2024-01-01','YYYY-MM-DD') + LEVEL - 1 AS dt 
	FROM dual CONNECT BY LEVEL <= (TO_DATE('2024-12-31','YYYY-MM-DD') - TO_DATE('2024-01-01','YYYY-MM-DD') + 1) ) b 
	WHERE b.dt = a.send_date(+) 
	GROUP BY TO_CHAR(b.dt, 'MM') 
	ORDER BY TO_CHAR(b.dt, 'MM')]]>
		 </select>
	<!-- 차트를 위한 관리자 카운트 -->
	<select id="inquiryReplyCount" resultType="com.kh.minCinema.domain.Ham_CountDateVO"> 
	<![CDATA[SELECT TO_CHAR(b.dt, 'MM') AS open_date , 
	NVL(SUM(a.replyCount), 0) replyCount 
	FROM ( SELECT TO_CHAR(open_date, 'YYYY-MM-DD') AS open_date , COUNT(*) replyCount 
	FROM MC_ONEONONE 
	WHERE open_date BETWEEN TO_DATE('2024-01-01', 'YYYY-MM-DD') 
	AND TO_DATE('2024-12-31', 'YYYY-MM-DD') GROUP BY open_date, TO_CHAR(open_date, 'YYYY-MM-DD') ) a ,
	( SELECT TO_DATE('2024-01-01','YYYY-MM-DD') + LEVEL - 1 AS dt 
	FROM dual CONNECT BY LEVEL <= (TO_DATE('2024-12-31','YYYY-MM-DD') - TO_DATE('2024-01-01','YYYY-MM-DD') + 1) ) b 
	WHERE b.dt = a.open_date(+) 
	GROUP BY TO_CHAR(b.dt, 'MM') 
	ORDER BY TO_CHAR(b.dt, 'MM')]]>
 	</select>
		 
		 
</mapper>